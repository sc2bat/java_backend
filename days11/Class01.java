package days11;

// 클래스(class)
// -> 프로그램으로 처리하고자 하는 대상을 자료화하여
// 하나의 자료형으로 정의(속성/기능)한 사용자 정의 자료형
// 쉽게 말해 개발자가 필요에 의해 정의한 자료형입니다

// 만드는 법 : class 라는 키워드를 이용하여 만듭니다
// file내 여러 개의 클래스 존재할 수 있음
// 그 중 하나는 반드시 public이 있어야함	
// main 이 포함되어있는것이 주 클래스 나머지는 보조 클래스

// 프로그래밍에서 학생이라는 자료를 다룬다
// 클래스가 없었다면 name kor 각각 배열을 만드는데
// 평면으로 열단위의 데이터를 다뤘는데
// 클래스로 행단위의 데이터를 다루게끔
// 변수 여러개를 선언해서 하나의 데이터로

// 즉 각각의 데이터를 종합해서 대상 하나로

// 한글변수도 가능은 하지만 인코딩문제가 생길 수도 있기때문에 권장하진 않음
class 클래스이름 {
	//멤버필드
	int 변수1;
	double 변수2;
	String 변수3;
	int [] 배열1 = new int[5];
	
	//멤버 메소드
	public void 메소드1() {}
	public static void 메소드2() {}
}

// 클래스 First 생성
class First{
	int n1;
	int n2;
	// 속성(멤버필드, 멤버변수, 필드) : 클래스에 속한 정보(변수)들.
	// 속성은 변수로 생성하며 클래스의 멤버필드라고도 호칭합니다
}
	


public class Class01 {

	public static void main(String[] argrs) {
		/**/
		//자바의 핵심
		
		//클래스의 변수 선언
		//바이트 크기가 얼마나 되는지 모르기에 HEAP에다가 주소를 저장해놨다가 가져와서 사용
		First a1;
		// 새로 만들어진 클래스의 변수는 위와 같이 생성합니다.
		// 생성된 변수는 레퍼런스(참조)변수입니다.
		//배열 때와 마찬가지로, new 명령을 이용하여 Heap 영역에 적정 공간(클래스가 정의된 크기만큼)을 확보한 후, 그 주소를 a1 변수에 저장하여 사용합니다.
		// 레퍼런스 변수와 new 에 의해 만들어진 공간이 합쳐지면, 이를 객체라고 부릅니다.
		a1 = new First();
		// 위와 같이 공간이 할당되면 이제부터 n1, n2 변수가 사용이 가능합니다.
		// new First(); 로 생성된 새로운 공간을	뉴인스턴스 라고 부를예정
		// a1 은 객체 new First() 뉴인스턴스
		
		First a2 = new First();
		// 객체가 두개가 만들어지면, a1 에도 n1, n2 가 생성되고, a2에도 n1, n2 가 생성되므로, 그들을 구분하기 위해 
		// a1.n1		a1.n2		a2.n1		a2.n2		로 사용합니다.
		System.out.println(a1.n1);
		System.out.println(a1.n2);
		a2.n1 = 30;
		a2.n2 = 40;
		System.out.println(a2.n1);
		System.out.println(a2.n2);
		
	}
	
}
