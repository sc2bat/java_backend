package days09;

public class Array01 {

	public static void main(String[] args) {
		/**/
		// Array 배열
		// 프로그래밍을 함에 있어 좋은 점을 제공해준 변수
		// 어떤 계산이 있을줄 모름에도 불구하고 변수를 통해 결과값을 도출할 수 있었음
		
		// 변수의 단점 하나의 값밖에 저장안됨
		// 동시에 저장해야할 값이 10개라면 변수를 10개를 선언해야만 함
		// 연속된 데이터를 관련된 있는 것끼리 배열
		
		// 배열
		// 동일한 변수이름에 번호(첨자)를 붙여서 다수개의 데이터를 한 번에 저장할 수 있는 방법
		// 1. 다수개의 변수를 같은 이름으로 손쉽게 선언하여 사용가능
		// 2. 하나의 이름으로 다수개의 변수들을 제어할 수 있음
		
		// 배열의 생성방법
		// 자료형 [] 배열 변수명
		int [] a; // 참조변수 생성
		// 현재는 배열에 정수를 몇 개 저장할 수 있는지 갯수가 정해지지 않았습니다
		// 배열을 사용하기 전에 저장할 수 있는 갯수는 반드시 정해놓고 사용합니다.
		
		// 위의 내용 중 변수 a는 저장될 정수들의 공간이 아니라, 정수들은 별도의 공간에 저장하고 그 시작 주소를 저장하는 레퍼런스(참조) 변수입니다.
		
		
		// 배열: 참조 변수의 한 형태. 하나의 참조 변수 이름으로 첨자를 사용하여 여러개의 데이터를 사용함
		// 주기억장치
		// 배열의 선언 int [] a = new int[3]
		// a 11010110
		
		// Heap 영역
		// a[0] a[1] a[3]
		
		
		// 레퍼런스 변수는 HEAP 메모리 공간에 실제 데이터가 저장될 공간을 할당 받아야 사용할 수 있습니다. 아래 명령은 메모리 할당 명령입니다
		a = new int[3]; // 할당된 메모리 주소 저장
		
		// new: HEAP 영역에 새로운 공간을 확보하라는 명령 - 정수 3개가 저장될 공간
		//new 연산자 : 동적인  메모리를 생성하는 연산자
		//				 프로그램의 구동중에 HEAP 메모리에 공간을 생성하는 연산자로 생성된 메모리의 참조(주소) 값을 반환전달합니다
		// 위의 코드는 HEAP 메모리에 12Byte(정수3개) 공간을 생성하고, 해당 주소를 a배열 참조변수에 대입합니다
		
		// a배열 참조변수에 대입합니다.
		// 둘을 합쳐서
		int [] b = new int[3];
		// 으로 선언하기도 합니다
		
		// 이름만 바뀌었을 뿐 결국 변수
		
		// 배열의 각 공간에 값을 대입하는 방법
		// 인덱스(첨자) 연산을 사용
		// 배열의 인덱스(첨자) : 시작은 0, 종료는 배열의 크기 -1
		// 배열변수명 [인덱스(첨자)] = 값;
		a[0] = 10; // 배열의 1번째 요소에 값을 대입
		a[1] = 20; // 배열의 2번째 요소에 값을 대입
		a[2] = 30; // 배열의 3번째 요소에 값을 대입

		int a1, a2, a3;
		// ai = 30; // 에러
		
		int i = 0;
		b[i] = 30;
		i = 1;
		b[i] = 40;
		b[i+1] = 50;
		
		System.out.printf("a[0] = %d\n", a[0]); // a[0] = 10
		System.out.printf("a[1] = %d\n", a[1]); // a[1] = 20
		System.out.printf("a[2] = %d\n", a[2]); // a[2] = 30
		System.out.printf("b[0] = %d\n", b[0]); // b[0] = 30
		System.out.printf("b[1] = %d\n", b[1]); // b[1] = 40
		System.out.printf("b[2] = %d\n", b[2]); // b[2] = 50
		
		// 5명의 성적표를 산출하려면 25개의 변수가 필요했으나 줄일수 있음
		
		
		

	}

}
